FROM ubuntu:20.04
ENV DISTRO=focal
ARG UID=1000
ARG USER="nakkaya"

RUN sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list
RUN apt-get update && apt-get upgrade -y

# Set Timezone
#
ENV TZ=Asia/Nicosia \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    LC_ALL=C.UTF-8 \
    DEBIAN_FRONTEND=noninteractive

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN apt-get install tzdata -y --no-install-recommends
RUN dpkg-reconfigure tzdata

# Install Packages
#
RUN apt-get install sudo curl iputils-ping bash-completion -y --no-install-recommends
RUN apt-get install unzip wget htop xz-utils -y --no-install-recommends
RUN apt-get install rclone git git-annex git-annex-remote-rclone -y --no-install-recommends
RUN apt-get install postgresql-client -y --no-install-recommends
RUN apt-get install openjdk-11-jdk maven -y --no-install-recommends
RUN apt-get install build-essential clang clangd -y --no-install-recommends
RUN apt-get install python3 python3-pip  -y --no-install-recommends
RUN apt-get install ispell -y
RUN apt-get install apt-transport-https -y --no-install-recommends
# For Teensy
RUN apt-get install libxft2 -y --no-install-recommends

# Install Terraform
#
RUN apt-get install -y --no-install-recommends gnupg software-properties-common curl
RUN curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
RUN apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
RUN apt-get update && apt-get install -y --no-install-recommends terraform

# Install NodeJS
#
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
RUN apt-get install nodejs -y --no-install-recommends 

# Latex
#
RUN apt-get install texlive-latex-base texlive-xetex texlive-lang-english texlive-lang-european texlive-plain-generic latexmk -y --no-install-recommends

# PDF Tools
#
RUN apt-get install libpng-dev zlib1g-dev libpoppler-glib-dev \
    libpoppler-private-dev imagemagick -y --no-install-recommends

# Clean Apt
#
RUN apt-get clean && apt-get autoclean

# PIP Packages
#
RUN pip3 install invoke pylint ansible PyWebDAV3
RUN pip3 install jupyterlab jupyter-console remote_ikernel nbstripout
RUN pip3 install requests pillow numpy matplotlib

# Install Clojure
#
ADD https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein /usr/bin/lein
RUN chmod 755 /usr/bin/lein

# Install Go
#
ADD https://golang.org/dl/go1.16.5.linux-amd64.tar.gz /
RUN rm -rf /usr/local/go && tar -C /usr/local -xzf go1.16.5.linux-amd64.tar.gz
RUN ln -s /usr/local/go/bin/go /usr/bin/go
RUN rm -rf go1.16.5.linux-amd64.tar.gz

# Install AWS CLI
#
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
RUN unzip awscliv2.zip
RUN ./aws/install
RUN rm awscliv2.zip
RUN pip3 install boto3

# Arduino
#
RUN wget http://downloads.arduino.cc/arduino-1.8.13-linux64.tar.xz
RUN tar xf arduino-1.8.13-linux64.tar.xz
RUN mv arduino-1.8.13 /usr/local/share/arduino
RUN ln -s /usr/local/share/arduino/arduino /usr/local/bin/arduino
RUN ln -s /usr/local/share/arduino/arduino-builder /usr/local/bin/arduino-builder
RUN rm -rf arduino-1.8.13-linux64.tar.xz
RUN arduino --install-boards arduino:sam
RUN wget https://www.pjrc.com/teensy/td_153/TeensyduinoInstall.linux64
RUN chmod +x TeensyduinoInstall.linux64
RUN ./TeensyduinoInstall.linux64  --dir=/usr/local/share/arduino
RUN rm -rf TeensyduinoInstall.linux64

# Setup User
#
RUN useradd -u $UID -s /bin/bash $USER
RUN usermod -a -G dialout $USER
RUN adduser $USER sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

RUN mkdir /home/$USER/
RUN mkdir /storage
RUN chown -R $USER:$USER /storage
RUN chown -R $USER:$USER /home/$USER
RUN touch /home/$USER/.sudo_as_admin_successful
